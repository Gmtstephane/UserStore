basePath: /api/v1
definitions:
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      updatedAt:
        type: string
    required:
    - email
    - password
    type: object
  pgconn.PgError:
    properties:
      code:
        type: string
      columnName:
        type: string
      constraintName:
        type: string
      dataTypeName:
        type: string
      detail:
        type: string
      file:
        type: string
      hint:
        type: string
      internalPosition:
        type: integer
      internalQuery:
        type: string
      line:
        type: integer
      message:
        type: string
      position:
        type: integer
      routine:
        type: string
      schemaName:
        type: string
      severity:
        type: string
      tableName:
        type: string
      where:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Get the auth cookie token
      parameters:
      - description: models.Users{}
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: ""
          headers:
            Auth-cookie:
              type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        default:
          description: ""
          schema:
            $ref: '#/definitions/pgconn.PgError'
      summary: User Login
  /signup:
    post:
      consumes:
      - application/json
      description: get accounts
      parameters:
      - description: models.Users{}
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: ""
          headers:
            Auth-cookie:
              type: string
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/pgconn.PgError'
        "500":
          description: Conflict
          schema:
            $ref: '#/definitions/pgconn.PgError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pgconn.PgError'
      summary: List accounts
schemes:
- http
- https
swagger: "2.0"
