{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/login": {
            "post": {
                "description": "Get the auth cookie token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "models.Users{}",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "Auth-cookie": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/pgconn.PgError"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "get accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List accounts",
                "parameters": [
                    {
                        "description": "models.Users{}",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "Auth-cookie": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/pgconn.PgError"
                        }
                    },
                    "500": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/pgconn.PgError"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/pgconn.PgError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.User": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "pgconn.PgError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "columnName": {
                    "type": "string"
                },
                "constraintName": {
                    "type": "string"
                },
                "dataTypeName": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "hint": {
                    "type": "string"
                },
                "internalPosition": {
                    "type": "integer"
                },
                "internalQuery": {
                    "type": "string"
                },
                "line": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "routine": {
                    "type": "string"
                },
                "schemaName": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                },
                "where": {
                    "type": "string"
                }
            }
        }
    }
}